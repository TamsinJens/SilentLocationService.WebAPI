// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SilentLocationService.WebAPI.Models;

namespace SilentLocationService.WebAPI.Migrations
{
    [DbContext(typeof(LocationServiceContext))]
    [Migration("20200821010630_IdKey")]
    partial class IdKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SilentLocationService.WebAPI.Models.Location", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("backgroundColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("bluetoothOff")
                        .HasColumnType("bit");

                    b.Property<string>("coordinates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("silent")
                        .HasColumnType("bit");

                    b.Property<bool>("turnedOn")
                        .HasColumnType("bit");

                    b.Property<bool>("vibrate")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            id = 1,
                            bluetoothOff = false,
                            silent = false,
                            turnedOn = false,
                            vibrate = false
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
